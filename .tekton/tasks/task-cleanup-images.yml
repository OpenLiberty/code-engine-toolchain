apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-images
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: continuous-delivery-context-secret
      description: name of the configmap containing the continuous delivery pipeline context secrets
      default: secure-properties
    - name: toolchain-apikey-secret-key
      description: field in the secret that contains the api key used to access toolchain and DOI instance
      default: "toolchain-apikey"
    - name: resource-group
      description: target resource group (name or id) for the ibmcloud login operation
    - name: region
      description: target region for the ibmcloud login operation. A fully qualified id is expected (such as ibm:yp:us-south). If not fully qualified, the ibmcloud production prefix is appended (ie 'ibm:yp:')
      default: ""
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
    - name: task-image
      description: image used to execute this task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.2"
    - name: registry-namespace
      description: container registry namespace
  workspaces:
    - name: artifacts
      description: A workspace
      mountPath: /artifacts
  steps:
    - name: cleanup-images
      image: $(params.task-image)
      workingDir: /artifacts
      env:
        - name: PIPELINE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-id']
        - name: IBM_CLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.toolchain-apikey-secret-key)
      script: |
        #!/bin/bash
        set -e -o pipefail

        if [ $(params.pipeline-debug) == 1 ]; then
            env
            pwd
            ls -l
            echo "=== cat /artifacts/_toolchain.json ==="
            cat /artifacts/_toolchain.json
            echo ""
            echo "======================================"
            trap env EXIT
            set -x
        fi

        # SETUP BEGIN
        ibmcloud config --check-version false
        if [ "$(params.region)" ]; then
          # if region is in the 'ibm:yp:<region>' format just keep the region part
          IBM_CLOUD_REGION=$(echo "$(params.region)" | awk -F ':' '{print $NF;}')
        else
          IBM_CLOUD_REGION=$(jq -r '.region_id' /artifacts/_toolchain.json | awk -F: '{print $3}')
        fi

        ibmcloud login -a $(params.ibmcloud-api) -r $IBM_CLOUD_REGION --apikey $IBM_CLOUD_API_KEY

        ibmcloud target -g "$(params.resource-group)"

        # clean up untagged images from libertyio namespace
        echo "Deleting untagged images from namespace $(params.registry-namespace)"
        ibmcloud cr image-prune-untagged --force --restrict "$(params.registry-namespace)"
